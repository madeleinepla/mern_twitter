{"version":3,"sources":["util/route_util.js","util/session_api_util.js","actions/session_actions.js","components/nav/navbar.js","components/nav/navbar_container.js","actions/tweet_actions.js","util/tweet_api_util.js","components/tweets/tweet_box.js","components/tweets/tweets.js","components/tweets/tweets_container.js","components/main/main_page.js","components/session/login_form.js","components/session/login_form_container.js","components/session/signup_form.js","components/session/signup_form_container.js","components/profile/profile.js","components/profile/profile_container.js","components/tweets/tweet_compose.js","components/tweets/tweet_compose_container.js","components/app.js","components/root.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/errors_reducer.js","reducers/tweets_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["mapStateToProps","state","loggedIn","session","isAuthenticated","AuthRoute","withRouter","connect","_ref","Component","component","path","exact","react_default","a","createElement","Route","render","props","Redirect","to","ProtectedRoute","_ref2","rest","Object","objectWithoutProperties","assign","setAuthToken","token","axios","defaults","headers","common","receiveErrors","errors","type","signup","user","dispatch","userData","post","then","err","response","data","login","res","localStorage","setItem","APIUtil","decoded","jwt_decode","currentUser","catch","logout","removeItem","NavBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logoutUser","bind","assertThisInitialized","getLinks","e","preventDefault","Link","onClick","React","fetchTweets","get","tweets","receiveTweets","console","log","fetchUserTweets","id","concat","getUserTweets","receiveUserTweets","composeTweet","writeTweet","tweet","receiveNewTweet","TweetBox","text","Tweet","newState","setState","length","map","tweet_box","key","_id","values","all","Tweets","MainPage","LoginForm","email","password","handleSubmit","renderErrors","nextProps","history","push","field","_this2","defineProperty","currentTarget","value","_this3","keys","error","i","onSubmit","onChange","update","placeholder","SignupForm","handle","password2","clearedErrors","signedIn","className","isSignedIn","Profile","TweetCompose","newTweet","new","App","navbar_container","Switch","LoginFormContainer","SignupFormContainer","TweetsContainer","ProfileContainer","TweetComposeContainer","Root","store","es","HashRouter","app","initialState","_nullErrors","SessionErrorsReducer","arguments","undefined","action","freeze","combineReducers","TweetsReducer","RootReducer","objectSpread","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","document","addEventListener","jwtToken","decodedUser","currentTime","Date","now","exp","window","location","href","root","getElementById","ReactDOM","components_root"],"mappings":"6OA2BMA,EAAkB,SAAAC,GAAK,MAC3B,CAAEC,SAAUD,EAAME,QAAQC,kBAGfC,EAAYC,YAAWC,YAAQP,EAARO,CA3BvB,SAAAC,GAAA,IAAcC,EAAdD,EAAGE,UAAsBC,EAAzBH,EAAyBG,KAAMT,EAA/BM,EAA+BN,SAAUU,EAAzCJ,EAAyCI,MAAzC,OACXC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOL,KAAMA,EAAMC,MAAOA,EAAOK,OAAQ,SAACC,GAAD,OACtChB,EAGCW,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,GAAG,YAFbP,EAAAC,EAAAC,cAACN,EAAcS,SA0BRG,EAAiBf,YAAWC,YAAQP,EAARO,CAnBvB,SAAAe,GAAA,IAAcb,EAAda,EAAGZ,UAAsBR,EAAzBoB,EAAyBpB,SAAaqB,EAAtCC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,iCAChBT,EAAAC,EAAAC,cAACC,EAAA,EAADQ,OAAAE,OAAA,GACMH,EADN,CAEEN,OAAQ,SAAAC,GAAK,OACXhB,EACEW,EAAAC,EAAAC,cAACN,EAAcS,GAEfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,GAAG,2CCnBRO,EAAe,SAAAC,GACtBA,EACFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,gCCWEC,EAAgB,SAAAC,GAAM,MAAK,CACtCC,KAdoC,yBAepCD,WAOWE,EAAS,SAAAC,GAAI,OAAI,SAAAC,GAAQ,ODhBfC,ECiBNF,EDhBRR,IAAMW,KAAK,sBAAuBD,ICgBpBE,KAAK,kBACxBH,EAfoC,CACtCH,KARkC,0BAuB/B,SAAAO,GAAG,OACJJ,EAASL,EAAcS,EAAIC,SAASC,SDpBlB,IAACL,ICwBVM,EAAQ,SAAAR,GAAI,OAAI,SAAAC,GAAQ,ODpBfC,ECqBNF,EDpBPR,IAAMW,KAAK,mBAAoBD,ICoBlBE,KAAK,SAAAK,GAAO,IACtBlB,EAAUkB,EAAIF,KAAdhB,MACRmB,aAAaC,QAAQ,WAAYpB,GACjCqB,EAAqBrB,GACrB,IAAMsB,EAAUC,IAAWvB,GAC3BU,EAhC8C,CAChDH,KANkC,uBAOlCiB,YA8B8BF,MAE3BG,MAAM,SAAAX,GACLJ,EAASL,EAAcS,EAAIC,SAASC,SD7BrB,IAACL,ICiCTe,EAAS,kBAAM,SAAAhB,GAC1BS,aAAaQ,WAAW,YACxBN,GAAqB,GACrBX,EA5B+B,CAC/BH,KAlBiC,4ECyCpBqB,qBAzCb,SAAAA,EAAYtC,GAAO,IAAAuC,EAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAAH,IACjBC,EAAAjC,OAAAoC,EAAA,EAAApC,CAAAmC,KAAAnC,OAAAqC,EAAA,EAAArC,CAAAgC,GAAAM,KAAAH,KAAMzC,KACD6C,WAAaN,EAAKM,WAAWC,KAAhBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAiC,KAClBA,EAAKS,SAAWT,EAAKS,SAASF,KAAdxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAiC,KAHCA,0EAMRU,GACTA,EAAEC,iBACFT,KAAKzC,MAAMoC,4CAIX,OAAIK,KAAKzC,MAAMhB,SAEXW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMjD,GAAI,WAAV,cACAP,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMjD,GAAI,YAAV,WACAP,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMjD,GAAI,cAAV,iBACAP,EAAAC,EAAAC,cAAA,UAAQuD,QAASX,KAAKI,YAAtB,WAKFlD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMjD,GAAI,WAAV,UACAP,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMjD,GAAI,UAAV,2CAON,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACC4C,KAAKO,mBApCOK,IAAM9D,YCKZF,cAJS,SAAAN,GAAK,MAAK,CAChCC,SAAUD,EAAME,QAAQC,kBAKxB,CAAEkD,UAFW/C,CAGbiD,GCSWgB,EAAc,kBAAM,SAAAlC,GAAQ,OCjBhCT,IAAM4C,IAAI,eDmBdhC,KAAK,SAAAiC,GAAM,OAAIpC,EAjBS,SAAAoC,GAAM,MAAK,CACtCvC,KAL4B,iBAM5BuC,UAe2BC,CAAcD,MACtCrB,MAAM,SAAAX,GAAG,OAAIkC,QAAQC,IAAInC,OAGjBoC,EAAkB,SAAAC,GAAE,OAAI,SAAAzC,GAAQ,OCpBhB,SAAAyC,GAC3B,OAAOlD,IAAM4C,IAAN,oBAAAO,OAA8BD,IDoBrCE,CAAcF,GACXtC,KAAK,SAAAiC,GAAM,OAAIpC,EAlBa,SAAAoC,GAAM,MAAK,CAC1CvC,KATiC,sBAUjCuC,UAgB2BQ,CAAkBR,MAC1CrB,MAAM,SAAAX,GAAG,OAAIkC,QAAQC,IAAInC,OAGjByC,EAAe,SAAAvC,GAAI,OAAI,SAAAN,GAAQ,OCtBlB,SAAAM,GACxB,OAAOf,IAAMW,KAAK,eAAgBI,GDsBlCwC,CAAWxC,GACRH,KAAK,SAAA4C,GAAK,OAAI/C,EAnBY,SAAA+C,GAAK,MAAK,CACvClD,KAb+B,oBAc/BkD,SAiB0BC,CAAgBD,MACvChC,MAAM,SAAAX,GAAG,OAAIkC,QAAQC,IAAInC,OExBf6C,mLARX,OACE1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK4C,KAAKzC,MAAMsE,cAJDjB,IAAM9D,WCEvBgF,cACJ,SAAAA,EAAYvE,GAAO,IAAAuC,EAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAA8B,IACjBhC,EAAAjC,OAAAoC,EAAA,EAAApC,CAAAmC,KAAAnC,OAAAqC,EAAA,EAAArC,CAAAiE,GAAA3B,KAAAH,KAAMzC,KAEDjB,MAAQ,CACXyE,OAAQ,IAJOjB,oFASjBE,KAAKzC,MAAMsD,gEAGakB,GACxB/B,KAAKgC,SAAS,CAAEjB,OAAQgB,EAAShB,0CAIjC,OAAiC,IAA7Bf,KAAK1D,MAAMyE,OAAOkB,OACZ/E,EAAAC,EAAAC,cAAA,kCAGNF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACC4C,KAAK1D,MAAMyE,OAAOmB,IAAI,SAAAR,GAAK,OAC1BxE,EAAAC,EAAAC,cAAC+E,EAAD,CAAUC,IAAKV,EAAMW,IAAKR,KAAMH,EAAMG,iBAzB9BjB,IAAM9D,WAiCXH,cAAWmF,GCrBXlF,cAZS,SAACN,GACvB,MAAO,CACLyE,OAAQlD,OAAOyE,OAAOhG,EAAMyE,OAAOwB,OAIZ,SAAA5D,GACzB,MAAO,CACLkC,YAAa,kBAAMlC,EAASkC,QAIjBjE,CAA6C4F,GCA7CC,mLAXX,OACEvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,qDANewD,IAAM9D,mBCCvB4F,cACJ,SAAAA,EAAYnF,GAAO,IAAAuC,EAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAA0C,IACjB5C,EAAAjC,OAAAoC,EAAA,EAAApC,CAAAmC,KAAAnC,OAAAqC,EAAA,EAAArC,CAAA6E,GAAAvC,KAAAH,KAAMzC,KAEDjB,MAAQ,CACXqG,MAAO,GACPC,SAAU,GACVrE,OAAQ,IAGVuB,EAAK+C,aAAe/C,EAAK+C,aAAaxC,KAAlBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAiC,KACpBA,EAAKgD,aAAehD,EAAKgD,aAAazC,KAAlBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAiC,KAVHA,yFAaOiD,IACM,IAA1BA,EAAUtD,aACZO,KAAKzC,MAAMyF,QAAQC,KAAK,WAG1BjD,KAAKgC,SAAS,CAAEzD,OAAQwE,EAAUxE,wCAG7B2E,GAAO,IAAAC,EAAAnD,KACZ,OAAO,SAAAQ,GAAC,OAAI2C,EAAKnB,SAALnE,OAAAuF,EAAA,EAAAvF,CAAA,GACTqF,EAAQ1C,EAAE6C,cAAcC,8CAIhB9C,GACXA,EAAEC,iBAEF,IAAI/B,EAAO,CACTiE,MAAO3C,KAAK1D,MAAMqG,MAClBC,SAAU5C,KAAK1D,MAAMsG,UAGvB5C,KAAKzC,MAAM2B,MAAMR,0CAGJ,IAAA6E,EAAAvD,KACb,OACE9C,EAAAC,EAAAC,cAAA,UACGS,OAAO2F,KAAKxD,KAAK1D,MAAMiC,QAAQ2D,IAAI,SAACuB,EAAOC,GAAR,OAClCxG,EAAAC,EAAAC,cAAA,MAAIgF,IAAG,SAAAf,OAAWqC,IACfH,EAAKjH,MAAMiC,OAAOkF,wCAQ3B,OACEvG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMuG,SAAU3D,KAAK6C,cACnB3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,OACV8E,MAAOtD,KAAK1D,MAAMqG,MAClBiB,SAAU5D,KAAK6D,OAAO,SACtBC,YAAY,UAEd5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,WACV8E,MAAOtD,KAAK1D,MAAMsG,SAClBgB,SAAU5D,KAAK6D,OAAO,YACtBC,YAAY,aAEd5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,SAAS8E,MAAM,WAC1BtD,KAAK8C,yBAtEMlC,IAAM9D,WA8EfH,cAAW+F,GCjEX9F,cAZS,SAACN,GACvB,MAAO,CACLiC,OAAQjC,EAAMiC,OAAO/B,UAIE,SAACmC,GAC1B,MAAO,CACLO,MAAO,SAAAR,GAAI,OAAIC,EAASO,EAAMR,OAInB9B,CAGb8F,GChBIqB,cACJ,SAAAA,EAAYxG,GAAO,IAAAuC,EAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAA+D,IACjBjE,EAAAjC,OAAAoC,EAAA,EAAApC,CAAAmC,KAAAnC,OAAAqC,EAAA,EAAArC,CAAAkG,GAAA5D,KAAAH,KAAMzC,KACDjB,MAAQ,CACXqG,MAAO,GACPqB,OAAQ,GACRpB,SAAU,GACVqB,UAAW,GACX1F,OAAQ,IAGVuB,EAAK+C,aAAe/C,EAAK+C,aAAaxC,KAAlBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAiC,KACpBA,EAAKoE,eAAgB,EAXJpE,yFAcOiD,IACG,IAAvBA,EAAUoB,UACZnE,KAAKzC,MAAMyF,QAAQC,KAAK,UAG1BjD,KAAKgC,SAAS,CAAEzD,OAAQwE,EAAUxE,wCAG7B2E,GAAO,IAAAC,EAAAnD,KACZ,OAAO,SAAAQ,GAAC,OAAI2C,EAAKnB,SAALnE,OAAAuF,EAAA,EAAAvF,CAAA,GACTqF,EAAQ1C,EAAE6C,cAAcC,8CAIhB9C,GACXA,EAAEC,iBACF,IAAI/B,EAAO,CACTiE,MAAO3C,KAAK1D,MAAMqG,MAClBqB,OAAQhE,KAAK1D,MAAM0H,OACnBpB,SAAU5C,KAAK1D,MAAMsG,SACrBqB,UAAWjE,KAAK1D,MAAM2H,WAGxBjE,KAAKzC,MAAMkB,OAAOC,EAAMsB,KAAKzC,MAAMyF,gDAGtB,IAAAO,EAAAvD,KACb,OACE9C,EAAAC,EAAAC,cAAA,UACGS,OAAO2F,KAAKxD,KAAK1D,MAAMiC,QAAQ2D,IAAI,SAACuB,EAAOC,GAAR,OAClCxG,EAAAC,EAAAC,cAAA,MAAIgF,IAAG,SAAAf,OAAWqC,IACfH,EAAKjH,MAAMiC,OAAOkF,wCAQ3B,OACEvG,EAAAC,EAAAC,cAAA,OAAKgH,UAAU,wBACblH,EAAAC,EAAAC,cAAA,QAAMuG,SAAU3D,KAAK6C,cACnB3F,EAAAC,EAAAC,cAAA,OAAKgH,UAAU,cACblH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,OACV8E,MAAOtD,KAAK1D,MAAMqG,MAClBiB,SAAU5D,KAAK6D,OAAO,SACtBC,YAAY,UAEd5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,OACV8E,MAAOtD,KAAK1D,MAAM0H,OAClBJ,SAAU5D,KAAK6D,OAAO,UACtBC,YAAY,WAEd5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,WACV8E,MAAOtD,KAAK1D,MAAMsG,SAClBgB,SAAU5D,KAAK6D,OAAO,YACtBC,YAAY,aAEd5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,WACV8E,MAAOtD,KAAK1D,MAAM2H,UAClBL,SAAU5D,KAAK6D,OAAO,aACtBC,YAAY,qBAEd5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,SAAS8E,MAAM,WAC1BtD,KAAK8C,yBApFOlC,IAAM9D,WA4FhBH,cAAWoH,GC9EXnH,cAbS,SAACN,GACvB,MAAO,CACL6H,SAAU7H,EAAME,QAAQ6H,WACxB9F,OAAQjC,EAAMiC,OAAO/B,UAIE,SAACmC,GAC1B,MAAO,CACLF,OAAQ,SAAAC,GAAI,OAAIC,EAASF,EAAOC,OAIrB9B,CAGbmH,GCiBaO,cAjCb,SAAAA,EAAY/G,GAAO,IAAAuC,EAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAAsE,IACjBxE,EAAAjC,OAAAoC,EAAA,EAAApC,CAAAmC,KAAAnC,OAAAqC,EAAA,EAAArC,CAAAyG,GAAAnE,KAAAH,KAAMzC,KAEDjB,MAAQ,CACXyE,OAAQ,IAJOjB,oFASjBmB,QAAQC,IAAIlB,KAAKzC,MAAMkC,YAAY2B,IACnCpB,KAAKzC,MAAM4D,gBAAgBnB,KAAKzC,MAAMkC,YAAY2B,sDAG1BW,GACxB/B,KAAKgC,SAAS,CAAEjB,OAAQgB,EAAShB,0CAIjC,OAAiC,IAA7Bf,KAAK1D,MAAMyE,OAAOkB,OACZ/E,EAAAC,EAAAC,cAAA,sCAGNF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACC4C,KAAK1D,MAAMyE,OAAOmB,IAAI,SAAAR,GAAK,OAC1BxE,EAAAC,EAAAC,cAAC+E,EAAD,CAAUC,IAAKV,EAAMW,IAAKR,KAAMH,EAAMG,iBA1B5BjB,IAAM9D,WCcbF,cAbS,SAACN,GACvB,MAAO,CACLyE,OAAQlD,OAAOyE,OAAOhG,EAAMyE,OAAOrC,MACnCe,YAAanD,EAAME,QAAQkC,OAIJ,SAAAC,GACzB,MAAO,CACLwC,gBAAiB,SAAAC,GAAE,OAAIzC,EAASwC,EAAgBC,OAIrCxE,CAA6C0H,GCsC7CC,cAnDb,SAAAA,EAAYhH,GAAO,IAAAuC,EAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAAuE,IACjBzE,EAAAjC,OAAAoC,EAAA,EAAApC,CAAAmC,KAAAnC,OAAAqC,EAAA,EAAArC,CAAA0G,GAAApE,KAAAH,KAAMzC,KAEDjB,MAAQ,CACXuF,KAAM,GACN2C,SAAU,IAGZ1E,EAAK+C,aAAe/C,EAAK+C,aAAaxC,KAAlBxC,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAiC,KARHA,yFAWOiD,GACxB/C,KAAKgC,SAAS,CAAEwC,SAAUzB,EAAUyB,SAAS3C,4CAGlCrB,GACXA,EAAEC,iBACF,IAAIiB,EAAQ,CACVG,KAAM7B,KAAK1D,MAAMuF,MAGnB7B,KAAKzC,MAAMiE,aAAaE,GACxB1B,KAAKgC,SAAS,CAAEH,KAAM,sCAGf,IAAAsB,EAAAnD,KACP,OAAO,SAAAQ,GAAC,OAAI2C,EAAKnB,SAAS,CACxBH,KAAMrB,EAAE6C,cAAcC,0CAKxB,OACEpG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMuG,SAAU3D,KAAK6C,cACnB3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,WACV8E,MAAOtD,KAAK1D,MAAMuF,KAClB+B,SAAU5D,KAAK6D,SACfC,YAAY,wBAEd5G,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,SAAS8E,MAAM,aAG/BpG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+E,EAAD,CAAUN,KAAM7B,KAAK1D,MAAMkI,mBA9CR5D,IAAM9D,WCclBF,cAbS,SAACN,GACvB,MAAO,CACLmD,YAAanD,EAAME,QAAQkC,KAC3B8F,SAAUlI,EAAMyE,OAAO0D,MAIA,SAAA9F,GACzB,MAAO,CACL6C,aAAc,SAAAvC,GAAI,OAAIN,EAAS6C,EAAavC,OAIjCrC,CAA6C2H,GCU7CG,GAfH,kBACVxH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,EAAD,MACAzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACE1H,EAAAC,EAAAC,cAACV,EAAD,CAAWO,OAAK,EAACD,KAAK,IAAID,UAAW0F,IACrCvF,EAAAC,EAAAC,cAACV,EAAD,CAAWO,OAAK,EAACD,KAAK,SAASD,UAAW8H,IAC1C3H,EAAAC,EAAAC,cAACV,EAAD,CAAWO,OAAK,EAACD,KAAK,UAAUD,UAAW+H,IAE3C5H,EAAAC,EAAAC,cAACM,EAAD,CAAgBT,OAAK,EAACD,KAAK,UAAUD,UAAWgI,IAChD7H,EAAAC,EAAAC,cAACM,EAAD,CAAgBT,OAAK,EAACD,KAAK,WAAWD,UAAWiI,IACjD9H,EAAAC,EAAAC,cAACM,EAAD,CAAgBT,OAAK,EAACD,KAAK,aAAaD,UAAWkI,OCT1CC,GARF,SAAArI,GAAA,IAAGsI,EAAHtI,EAAGsI,MAAH,OACXjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAUD,MAAOA,GACfjI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,KACEnI,EAAAC,EAAAC,cAACkI,GAAD,wDCFAC,GAAe,CACnB9I,iBAAiB,EACjBiC,KAAM,ICHF8G,GAAc,GAcLC,GAZc,WAAiC,IAAhCnJ,EAAgCoJ,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAxBF,GAAaI,EAAWF,UAAAzD,OAAA,EAAAyD,UAAA,QAAAC,EAE5D,OADA9H,OAAOgI,OAAOvJ,GACNsJ,EAAOpH,MACb,IpBNkC,yBoBOhC,OAAOoH,EAAOrH,OAChB,IpBTgC,uBoBU9B,OAAOiH,GACT,QACE,OAAOlJ,ICXEwJ,gBAAgB,CAC7BtJ,QAASiJ,KCeIM,GAlBO,WAA2D,IAA1DzJ,EAA0DoJ,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAlD,CAAEnD,IAAK,GAAI7D,KAAM,GAAI+F,SAAKkB,GAAaC,EAAWF,UAAAzD,OAAA,EAAAyD,UAAA,QAAAC,EAC/E9H,OAAOgI,OAAOvJ,GACd,IAAIyF,EAAWlE,OAAOE,OAAO,GAAIzB,GACjC,OAAQsJ,EAAOpH,MACb,InBJ0B,iBmBMxB,OADAuD,EAASQ,IAAMqD,EAAO7E,OAAO9B,KACtB8C,EACT,InBN+B,sBmBQ7B,OADAA,EAASrD,KAAOkH,EAAO7E,OAAO9B,KACvB8C,EACT,InBR6B,oBmBU3B,OADAA,EAAS0C,IAAMmB,EAAOlE,MAAMzC,KACrB8C,EACT,QACE,OAAOzF,ICLE0J,GANKF,aAAgB,CAClCvH,UACA/B,QJIa,WAAwC,IAA9BF,EAA8BoJ,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAcK,EAAQF,UAAAzD,OAAA,EAAAyD,UAAA,QAAAC,EACrD,OAAQC,EAAOpH,MACb,InBVgC,uBmBW9B,OAAOX,OAAAoI,GAAA,EAAApI,CAAA,GACFvB,EADL,CAEEG,kBAAmBmJ,EAAOnG,YAC1Bf,KAAMkH,EAAOnG,cAEjB,InBd+B,sBmBe7B,MAAO,CACLhD,iBAAiB,EACjBiC,UAAMiH,GAEV,InBlBgC,uBmBmB9B,OAAO9H,OAAAoI,GAAA,EAAApI,CAAA,GACFvB,EADL,CAEE+H,YAAY,IAEhB,QACE,OAAO/H,IItBXyE,YCMamF,GARQ,eAACC,EAADT,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAkB,GAAlB,OACrBU,aACEC,GACAF,EACAG,aAAgBC,KAAOC,QCD3BC,SAASC,iBAAiB,mBAAoB,WAC5C,IAAIvB,EAEJ,GAAI/F,aAAauH,SAAU,CACzB3I,EAAaoB,aAAauH,UAE1B,IAAMC,EAAcpH,IAAWJ,aAAauH,UAG5CxB,EAAQe,GAFe,CAAE1J,QAAS,CAAEC,iBAAiB,EAAMiC,KAAMkI,KAIjE,IAAMC,EAAcC,KAAKC,MAAQ,IAE7BH,EAAYI,IAAMH,IACpB1B,EAAMxG,SAASgB,KACfsH,OAAOC,SAASC,KAAO,eAGzBhC,EAAQe,GAAe,IAEzB,IAAMkB,EAAOX,SAASY,eAAe,QAErCC,IAAShK,OAAOJ,EAAAC,EAAAC,cAACmK,GAAD,CAAMpC,MAAOA,IAAWiC","file":"static/js/main.9bbfe79a.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n      <Redirect to=\"/tweets\" />\n    )\n  )} />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => (\n  { loggedIn: state.session.isAuthenticated }\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","import axios from 'axios';\n\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const signup = (userData) => {\n  return axios.post('/api/users/register', userData);\n};\n\nexport const login = (userData) => {\n  return axios.post('/api/users/login', userData);\n};","import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\n\nexport const signup = user => dispatch => (\n  APIUtil.signup(user).then(() => (\n    dispatch(receiveUserSignIn())\n  ), err => (\n    dispatch(receiveErrors(err.response.data))\n  ))\n);\n\nexport const login = user => dispatch => (\n  APIUtil.login(user).then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    APIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded))\n  })\n    .catch(err => {\n      dispatch(receiveErrors(err.response.data));\n    })\n)\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken')\n  APIUtil.setAuthToken(false)\n  dispatch(logoutUser())\n};","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.getLinks = this.getLinks.bind(this);\n  }\n\n  logoutUser(e) {\n    e.preventDefault();\n    this.props.logout();\n  }\n\n  getLinks() {\n    if (this.props.loggedIn) {\n      return (\n        <div>\n          <Link to={'/tweets'}>All Tweets</Link>\n          <Link to={'/profile'}>Profile</Link>\n          <Link to={'/new_tweet'}>Write a Tweet</Link>\n          <button onClick={this.logoutUser}>Logout</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Link to={'/signup'}>Signup</Link>\n          <Link to={'/login'}>Login</Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Chirper</h1>\n        {this.getLinks()}\n      </div>\n    );\n  }\n}\n\nexport default NavBar;","import { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\n\nimport NavBar from './navbar';\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(NavBar);","import { getTweets, getUserTweets, writeTweet } from '../util/tweet_api_util';\n\nexport const RECEIVE_TWEETS = \"RECEIVE_TWEETS\";\nexport const RECEIVE_USER_TWEETS = \"RECEIVE_USER_TWEETS\";\nexport const RECEIVE_NEW_TWEET = \"RECEIVE_NEW_TWEET\";\n\nexport const receiveTweets = tweets => ({\n  type: RECEIVE_TWEETS,\n  tweets\n});\n\nexport const receiveUserTweets = tweets => ({\n  type: RECEIVE_USER_TWEETS,\n  tweets\n});\n\nexport const receiveNewTweet = tweet => ({\n  type: RECEIVE_NEW_TWEET,\n  tweet\n})\n\nexport const fetchTweets = () => dispatch => (\n  getTweets()\n    .then(tweets => dispatch(receiveTweets(tweets)))\n    .catch(err => console.log(err))\n);\n\nexport const fetchUserTweets = id => dispatch => (\n  getUserTweets(id)\n    .then(tweets => dispatch(receiveUserTweets(tweets)))\n    .catch(err => console.log(err))\n);\n\nexport const composeTweet = data => dispatch => (\n  writeTweet(data)\n    .then(tweet => dispatch(receiveNewTweet(tweet)))\n    .catch(err => console.log(err))\n);","\nimport axios from 'axios';\n\nexport const getTweets = () => {\n  return axios.get('/api/tweets')\n};\n\nexport const getUserTweets = id => {\n  return axios.get(`/api/tweets/user/${id}`)\n};\n\nexport const writeTweet = data => {\n  return axios.post('/api/tweets/', data)\n}","import React from 'react';\n\nclass TweetBox extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3>{this.props.text}</h3>\n      </div>\n    );\n  }\n}\n\nexport default TweetBox;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TweetBox from './tweet_box';\n\nclass Tweet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tweets: []\n    }\n  }\n\n  componentWillMount() {\n    this.props.fetchTweets();\n  }\n\n  componentWillReceiveProps(newState) {\n    this.setState({ tweets: newState.tweets });\n  }\n\n  render() {\n    if (this.state.tweets.length === 0) {\n      return (<div>There are no Tweets</div>)\n    } else {\n      return (\n        <div>\n          <h2>All Tweets</h2>\n          {this.state.tweets.map(tweet => (\n            <TweetBox key={tweet._id} text={tweet.text} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(Tweet);","import { connect } from 'react-redux';\nimport { fetchTweets } from '../../actions/tweet_actions';\nimport Tweets from './tweets';\n\nconst mapStateToProps = (state) => {\n  return {\n    tweets: Object.values(state.tweets.all)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTweets: () => dispatch(fetchTweets())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tweets);","import React from 'react';\n\nclass MainPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h1>A Twitter Clone</h1>\n        <footer>\n          Copyright &copy; 2019 Chirper\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/tweets');\n    }\n\n    this.setState({ errors: nextProps.errors })\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.login(user);\n  }\n\n  renderErrors() {\n    return (\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <br />\n            <input type=\"text\"\n              value={this.state.email}\n              onChange={this.update('email')}\n              placeholder=\"Email\"\n            />\n            <br />\n            <input type=\"password\"\n              value={this.state.password}\n              onChange={this.update('password')}\n              placeholder=\"Password\"\n            />\n            <br />\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);","import { connect } from 'react-redux';\nimport { login } from '../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: user => dispatch(login(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      handle: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.signedIn === true) {\n      this.props.history.push('/login');\n    }\n\n    this.setState({ errors: nextProps.errors })\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      handle: this.state.handle,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.signup(user, this.props.history);\n  }\n\n  renderErrors() {\n    return (\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"login-form\">\n            <br />\n            <input type=\"text\"\n              value={this.state.email}\n              onChange={this.update('email')}\n              placeholder=\"Email\"\n            />\n            <br />\n            <input type=\"text\"\n              value={this.state.handle}\n              onChange={this.update('handle')}\n              placeholder=\"Handle\"\n            />\n            <br />\n            <input type=\"password\"\n              value={this.state.password}\n              onChange={this.update('password')}\n              placeholder=\"Password\"\n            />\n            <br />\n            <input type=\"password\"\n              value={this.state.password2}\n              onChange={this.update('password2')}\n              placeholder=\"Confirm Password\"\n            />\n            <br />\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","import { connect } from 'react-redux';\nimport { signup } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.session.isSignedIn,\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: user => dispatch(signup(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm);","import React from 'react';\nimport TweetBox from '../tweets/tweet_box';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tweets: []\n    }\n  }\n\n  componentWillMount() {\n    console.log(this.props.currentUser.id)\n    this.props.fetchUserTweets(this.props.currentUser.id);\n  }\n\n  componentWillReceiveProps(newState) {\n    this.setState({ tweets: newState.tweets });\n  }\n\n  render() {\n    if (this.state.tweets.length === 0) {\n      return (<div>This user has no Tweets</div>)\n    } else {\n      return (\n        <div>\n          <h2>All of This User's Tweets</h2>\n          {this.state.tweets.map(tweet => (\n            <TweetBox key={tweet._id} text={tweet.text} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Profile;","import { connect } from 'react-redux';\nimport { fetchUserTweets } from '../../actions/tweet_actions';\nimport Profile from './profile';\n\nconst mapStateToProps = (state) => {\n  return {\n    tweets: Object.values(state.tweets.user),\n    currentUser: state.session.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTweets: id => dispatch(fetchUserTweets(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from 'react';\nimport TweetBox from './tweet_box';\n\nclass TweetCompose extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      newTweet: \"\"\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ newTweet: nextProps.newTweet.text });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let tweet = {\n      text: this.state.text\n    };\n\n    this.props.composeTweet(tweet);\n    this.setState({ text: '' })\n  }\n\n  update() {\n    return e => this.setState({\n      text: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <input type=\"textarea\"\n              value={this.state.text}\n              onChange={this.update()}\n              placeholder=\"Write your tweet...\"\n            />\n            <input type=\"submit\" value=\"Submit\" />\n          </div>\n        </form>\n        <br />\n        <TweetBox text={this.state.newTweet} />\n      </div>\n    )\n  }\n}\n\nexport default TweetCompose;","import { connect } from 'react-redux';\nimport { composeTweet } from '../../actions/tweet_actions';\nimport TweetCompose from './tweet_compose';\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.session.user,\n    newTweet: state.tweets.new\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    composeTweet: data => dispatch(composeTweet(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TweetCompose);","import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Switch } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\n\nimport TweetsContainer from './tweets/tweets_container';\nimport MainPage from './main/main_page';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileContainer from './profile/profile_container';\nimport TweetComposeContainer from './tweets/tweet_compose_container';\n\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n      <AuthRoute exact path=\"/\" component={MainPage} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n\n      <ProtectedRoute exact path=\"/tweets\" component={TweetsContainer} />\n      <ProtectedRoute exact path=\"/profile\" component={ProfileContainer} />\n      <ProtectedRoute exact path=\"/new_tweet\" component={TweetComposeContainer} />\n    </Switch>\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;","import {\n  RECEIVE_CURRENT_USER,\n  RECEIVE_USER_LOGOUT,\n  RECEIVE_USER_SIGN_IN\n} from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      }\n    default:\n      return state;\n  }\n}","import {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n} from '../actions/session_actions';\n\nconst _nullErrors = [];\n\nconst SessionErrorsReducer = (state = _nullErrors, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case RECEIVE_CURRENT_USER:\n      return _nullErrors;\n    default:\n      return state;\n  }\n};\n\nexport default SessionErrorsReducer;","import { combineReducers } from 'redux';\n\nimport SessionErrorsReducer from './session_errors_reducer';\n\nexport default combineReducers({\n  session: SessionErrorsReducer\n});","import { RECEIVE_TWEETS, RECEIVE_USER_TWEETS, RECEIVE_NEW_TWEET } from '../actions/tweet_actions';\n\nconst TweetsReducer = (state = { all: {}, user: {}, new: undefined }, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({}, state);\n  switch (action.type) {\n    case RECEIVE_TWEETS:\n      newState.all = action.tweets.data;\n      return newState;\n    case RECEIVE_USER_TWEETS:\n      newState.user = action.tweets.data;\n      return newState;\n    case RECEIVE_NEW_TWEET:\n      newState.new = action.tweet.data\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default TweetsReducer;","import { combineReducers } from 'redux';\nimport session from './session_reducer';\nimport errors from './errors_reducer';\nimport tweets from './tweets_reducer';\n\nconst RootReducer = combineReducers({\n  errors,\n  session,\n  tweets\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger)\n  )\n);\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\n\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n\n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login';\n    }\n  } else {\n    store = configureStore({});\n  }\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}